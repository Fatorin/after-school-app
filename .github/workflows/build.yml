name: After School API Linux Build & Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: '發布類型'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - release
  push:
    tags:
      - 'v*'
    paths:
      - 'after-school-api/**'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: 安裝最新版本的 Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-unknown-linux-gnu
    
    - name: 建立快取
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          after-school-api/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('after-school-api/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: 編譯專案
      run: |
        cd after-school-api
        cargo build --release --target x86_64-unknown-linux-gnu
    
    - name: 壓縮二進制檔案
      if: success()
      env:
        BINARY_PATH: after-school-api/target/x86_64-unknown-linux-gnu/release/after-school-api
        OUTPUT_FILE: after-school-api-linux-x64.tar.gz
      run: tar -czvf $OUTPUT_FILE $BINARY_PATH
    
    - name: 上傳編譯結果
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: after-school-api-linux
        path: after-school-api-linux-x64.tar.gz
        retention-days: 5
        compression-level: 6
    
    - name: 建立發布版本
      if: (success() && (startsWith(github.ref, 'refs/tags/') || github.event.inputs.release_type == 'release'))
      uses: softprops/action-gh-release@v1
      with:
        files: after-school-api-linux-x64.tar.gz
        name: ${{ startsWith(github.ref, 'refs/tags/') && format('After School API {0}', github.ref_name) || format('After School API Test Build {0}', github.sha) }}
        body: |
          After School API Linux 版本發布
          ${{ startsWith(github.ref, 'refs/tags/') && format('版本：{0}', github.ref_name) || format('測試版本 提交：{0}', github.sha) }}
        prerelease: ${{ github.event.inputs.release_type == 'test' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}